<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小梦刚的博客</title>
  <subtitle>前端工程师</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-24T14:30:29.378Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小梦刚</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jquery的扩展</title>
    <link href="http://yoursite.com/2017/05/24/jq/"/>
    <id>http://yoursite.com/2017/05/24/jq/</id>
    <published>2017-05-24T14:29:28.000Z</published>
    <updated>2017-05-24T14:30:29.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jq的扩展研究"><a href="#jq的扩展研究" class="headerlink" title="jq的扩展研究"></a>jq的扩展研究</h3><h4 id="fn"><a href="#fn" class="headerlink" title="$.fn"></a>$.fn</h4><blockquote>
<p>据不准确统计网站78/100 jquery的身影，jquery也引申除了大量的插件方便了我们的工作，轮播图各种各样的的 jq方便的操作dom和链式调用和兼容性大大的方便了攻城狮 <a href="http://www.jq22.com/" target="_blank" rel="external">jquery插件库</a></p>
</blockquote>
<h5 id="怎么用jq来编写插件呢？"><a href="#怎么用jq来编写插件呢？" class="headerlink" title="怎么用jq来编写插件呢？"></a>怎么用jq来编写插件呢？</h5><blockquote>
<p>在工作中你肯定这样写过</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$(&quot;h1 span&quot;).css(&#123;&quot;background&quot;:“#404040”,&quot;color&quot;:&quot;#ffffff&quot;&#125;);</div><div class="line">//链式调用就是方便</div><div class="line">//但是如果我们如果要是在其他的地方也是这么一句话呢怎么样实现把他挂载$上呢。</div><div class="line"></div><div class="line">$.fn.changestyleFn=function()&#123;</div><div class="line">	this.css(&#123;&quot;background&quot;:“#404040”,&quot;color&quot;:&quot;#ffffff&quot;&#125;)</div><div class="line">	return this;</div><div class="line">    //为什么return this 呢因为jq是链式调用啊每次都把这个对象都返回出去啊。为了后面的链式调用所以要把它返回出去。</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line">//我们在别的地方就直接可以这么使用;</div><div class="line">$(&quot;.box1&quot;).changestyleFn();</div><div class="line">$(&quot;.box2&quot;).changestyleFn();</div><div class="line">//是不是很优雅啊。</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<h4 id="如果使用者想自己传入background和color的值呢"><a href="#如果使用者想自己传入background和color的值呢" class="headerlink" title="如果使用者想自己传入background和color的值呢?"></a>如果使用者想自己传入background和color的值呢?</h4><p>有的同学们肯定想到了可以当做形参传过去</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//我们可以这样</div><div class="line">$.fn.changestyleFn=function(bg)&#123;</div><div class="line">    this.css(bg)</div><div class="line">    return this;</div><div class="line">    //为什么return this 呢因为jq是链式调用啊每次都把这个对象都返回出去啊。为了后面的链式调用所以要把它返回出去。</div><div class="line"></div><div class="line">&#125;</div><div class="line">//用户使用的可以直接穿参调用</div><div class="line"></div><div class="line">$(&quot;.box&quot;).changestyleFn(&#123;&quot;background&quot;:“#404040”,&quot;color&quot;:&quot;#ffffff&quot;&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>如果又来一个用户说你怎么没有缺省值啊。(“我想说你怎么不懒死啊 生气.jpg”)。<br>我知道大家肯定用过简单<code>for in</code> <code>&amp;&amp;</code>和<code>||</code>可以得到一个缺省值。</p>
</blockquote>
<h4 id="另一种方法-extend-target-obj1-obj2…"><a href="#另一种方法-extend-target-obj1-obj2…" class="headerlink" title="另一种方法 $.extend(target,obj1,obj2….),"></a>另一种方法 $.extend(target,obj1,obj2….),</h4><blockquote>
<p>他可以把多个对象的属性合并最终合并到target里。后面的优先级更高总是后面的覆盖前面的。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var opt=$.extend(&#123;&#125;,&#123;background:&quot;red&quot;,color:&quot;#fff&quot;&#125;,option);</div><div class="line">//option为用户传过来的</div></pre></td></tr></table></figure>
<blockquote>
<p>opt放到哪里比较好呢,全局肯定不好当让是我们的$.fn.changestyleFn的函数里面了。<br>最终版来袭</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">	$.fn.changestyleFn=function(option)&#123;</div><div class="line">    var opt=$.extend(&#123;&#125;,&#123;background:&quot;red&quot;,color:&quot;#fff&quot;&#125;,option);</div><div class="line">    this.css(opt)</div><div class="line">    return this;</div><div class="line">&#125;</div><div class="line">$(&quot;body&quot;).changestyleFn();</div><div class="line">$(&quot;body&quot;).changestyleFn(&#123;background:&quot;#404040&quot;,color:&quot;red&quot;&#125;);</div></pre></td></tr></table></figure>
<p>其实其他的插件也是这么做的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">最后不得多说一句，jq火是在各种兼容的浏览器时代但是随着现在移动端风靡全球jq现在就显得臃肿不堪。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;jq的扩展研究&quot;&gt;&lt;a href=&quot;#jq的扩展研究&quot; class=&quot;headerlink&quot; title=&quot;jq的扩展研究&quot;&gt;&lt;/a&gt;jq的扩展研究&lt;/h3&gt;&lt;h4 id=&quot;fn&quot;&gt;&lt;a href=&quot;#fn&quot; class=&quot;headerlink&quot; title=&quot;$.fn&quot;&gt;&lt;/a&gt;$.fn&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;据不准确统计网站78/100 jquery的身影，jquery也引申除了大量的插件方便了我们的工作，轮播图各种各样的的 jq方便的操作dom和链式调用和兼容性大大的方便了攻城狮 &lt;a href=&quot;http://www.jq22.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jquery插件库&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;怎么用jq来编写插件呢？&quot;&gt;&lt;a href=&quot;#怎么用jq来编写插件呢？&quot; class=&quot;headerlink&quot; title=&quot;怎么用jq来编写插件呢？&quot;&gt;&lt;/a&gt;怎么用jq来编写插件呢？&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;在工作中你肯定这样写过&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&amp;quot;h1 span&amp;quot;).css(&amp;#123;&amp;quot;background&amp;quot;:“#404040”,&amp;quot;color&amp;quot;:&amp;quot;#ffffff&amp;quot;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//链式调用就是方便&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//但是如果我们如果要是在其他的地方也是这么一句话呢怎么样实现把他挂载$上呢。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.fn.changestyleFn=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	this.css(&amp;#123;&amp;quot;background&amp;quot;:“#404040”,&amp;quot;color&amp;quot;:&amp;quot;#ffffff&amp;quot;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return this;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //为什么return this 呢因为jq是链式调用啊每次都把这个对象都返回出去啊。为了后面的链式调用所以要把它返回出去。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//我们在别的地方就直接可以这么使用;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&amp;quot;.box1&amp;quot;).changestyleFn();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&amp;quot;.box2&amp;quot;).changestyleFn();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//是不是很优雅啊。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>map reduce 的方法学习</title>
    <link href="http://yoursite.com/2017/05/23/js/"/>
    <id>http://yoursite.com/2017/05/23/js/</id>
    <published>2017-05-23T13:04:58.000Z</published>
    <updated>2017-05-23T16:13:19.602Z</updated>
    
    <content type="html"><![CDATA[<h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><h4 id="举一个栗子"><a href="#举一个栗子" class="headerlink" title="举一个栗子"></a>举一个栗子</h4><blockquote>
<p>js高阶函数Javascript的函数其实就是指向某个变量。既然变量可以指向函数，函数的参数可以使变量，那么一个函数可以接受另一个函数卫星参数。就比说ajax的成功回调函数就是当做形参穿进去了，当相应成功的时候执行函数。</p>
</blockquote>
<p>再比如一个最简单的高阶函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function add(x,y,f)&#123;</div><div class="line">	return f(x)+f(y);</div><div class="line">&#125;</div><div class="line">var x=-3;</div><div class="line">var y=4;</div><div class="line">var f=Math.abs;</div><div class="line">alert(add(x,y,f))//7</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="map方法"><a href="#map方法" class="headerlink" title="map方法"></a>map方法</h4><p>定义</p>
<blockquote>
<p>map 方法可以返回一个新数组,数组中的元素为原始数组元素调用处理后的值。也就是说map接受一个函数返回的数组中的元素被传入的函数处理后的新函数。</p>
</blockquote>
<p>####### tip </p>
<ol>
<li>不会改变原来的数组</li>
<li>不处理空的数组</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var arr=[2,3,4,5,6];</div><div class="line">function xx(x)&#123;</div><div class="line">	return x*x;</div><div class="line">&#125;</div><div class="line">console.log(arr.map(xx))//[4, 9, 16, 25, 36]</div></pre></td></tr></table></figure>
<h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><blockquote>
<p>reduce()方法接受一个函数作为一个累加器，数组中的每个值进行计算<br>f(f(f(x1, x2), x3), x4)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr=[1,2,3,4,5];</div><div class="line">arr.reduce(function(x,y)&#123;</div><div class="line">	return x+y</div><div class="line">&#125;);//15</div></pre></td></tr></table></figure>
<p>好了今天学会了map reduce 的方法了。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=32192436&auto=1&height=32"></iframe>

















]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;高阶函数&quot;&gt;&lt;a href=&quot;#高阶函数&quot; class=&quot;headerlink&quot; title=&quot;高阶函数&quot;&gt;&lt;/a&gt;高阶函数&lt;/h3&gt;&lt;h4 id=&quot;举一个栗子&quot;&gt;&lt;a href=&quot;#举一个栗子&quot; class=&quot;headerlink&quot; title=&quot;举一个栗子&quot;&gt;&lt;/a&gt;举一个栗子&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;js高阶函数Javascript的函数其实就是指向某个变量。既然变量可以指向函数，函数的参数可以使变量，那么一个函数可以接受另一个函数卫星参数。就比说ajax的成功回调函数就是当做形参穿进去了，当相应成功的时候执行函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再比如一个最简单的高阶函数&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function add(x,y,f)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return f(x)+f(y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var x=-3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var y=4;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var f=Math.abs;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(add(x,y,f))//7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>select</title>
    <link href="http://yoursite.com/2017/05/22/select/"/>
    <id>http://yoursite.com/2017/05/22/select/</id>
    <published>2017-05-22T15:44:56.000Z</published>
    <updated>2017-05-22T16:19:27.194Z</updated>
    
    <content type="html"><![CDATA[<h3 id="bootstrap-中的多选使用"><a href="#bootstrap-中的多选使用" class="headerlink" title="bootstrap 中的多选使用"></a>bootstrap 中的多选使用</h3><p><a href="https://silviomoreto.github.io/bootstrap-select/" target="_blank" rel="external">官方文档</a></p>
<blockquote>
<ol>
<li>首先先引入bootstrap.js(不要忘记jquery)和boostrap.css</li>
<li>引入bootstrap-select.js和css</li>
<li>好了现在开始</li>
</ol>
</blockquote>
<h4 id="1-第一种静态生成"><a href="#1-第一种静态生成" class="headerlink" title="1.第一种静态生成"></a>1.第一种静态生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;select class=&quot;selectpicker&quot;&gt;</div><div class="line">      &lt;option value=&quot;65&quot;&gt;淹死の鱼&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;66&quot;&gt;宋真真&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;89&quot;&gt;燕子&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;88&quot;&gt;何兴华&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;90&quot;&gt;巧芝-冯&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;91&quot;&gt;曼舞飞扬&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;94&quot;&gt;鲍海地&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;63&quot;&gt;蔡&lt;/option&gt;</div><div class="line">      &lt;option value=&quot;381&quot;&gt;Tank&lt;/option&gt;</div><div class="line">&lt;/select&gt;</div></pre></td></tr></table></figure>
<p>直接就在页面中生成了。</p>
<h4 id="2-动态生成"><a href="#2-动态生成" class="headerlink" title="2.动态生成"></a>2.动态生成</h4><blockquote>
<p>在实际开发过程中我们肯定会遇到字符串拼接生成在bootstrap-select有一个很好的方法那就是 $(‘.selectpicker’).selectpicker(‘refresh’);</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var str1=&quot;&quot;;</div><div class="line">for(var i=0;i&lt;data.length;i++)&#123;</div><div class="line">	str1+=&apos;&lt;option value=&quot;&apos;+data.val+&apos;&quot;&gt;&apos;+data.name+&apos;&lt;/option&gt;&apos;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">var str=&apos;&lt;select class=&quot;selectpicker  pull-left&quot; multiple data-noneSelectedText=&quot;点击添加&quot; data-title=&quot;点击添加&quot;&gt;&apos;+str1+&apos;&lt;/select&gt;&apos;;</div><div class="line"> $(&quot;.selectList&quot;).html(str);</div><div class="line">$(&apos;.selectpicker&apos;).selectpicker(&apos;refresh&apos;);</div></pre></td></tr></table></figure>
<p>然后就直接好了，什么时候需要动态添加就直接refresh就好了</p>
<a id="more"></a>
<h4 id="3-关于事件的触发"><a href="#3-关于事件的触发" class="headerlink" title="3.关于事件的触发"></a>3.关于事件的触发</h4><blockquote>
<p>刚开始的时候我也是看了会文档发现没有选择的事件触发啊，后来我才发现原来用的是原生的事件，bootstrap虽然改变了样式结构但是事件最后是没有更改的。直接用原生就好了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(&quot;.selectList&quot;).on(&quot;change&quot;,&quot;.selectpicker&quot;,function()&#123;</div><div class="line">       selectName=[];</div><div class="line">       for (var i=0;i&lt;$(this).find(&quot;option:selected&quot;).length;i++)&#123;</div><div class="line">           var obj=&#123;&#125;;</div><div class="line">           obj.id=$(this).find(&quot;option:selected&quot;).eq(i).val();</div><div class="line">           obj.name=$(this).find(&quot;option:selected&quot;).eq(i).text();</div><div class="line">           selectName.push(obj);</div><div class="line">       &#125;</div><div class="line">   &#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>那么现在一个简单的boostrap-select简单的需求就完成了。</p>
</blockquote>
<p><img src="/images/select.png" alt=""><br>如果需要更多的方法那就去看文档去吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;bootstrap-中的多选使用&quot;&gt;&lt;a href=&quot;#bootstrap-中的多选使用&quot; class=&quot;headerlink&quot; title=&quot;bootstrap 中的多选使用&quot;&gt;&lt;/a&gt;bootstrap 中的多选使用&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://silviomoreto.github.io/bootstrap-select/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首先先引入bootstrap.js(不要忘记jquery)和boostrap.css&lt;/li&gt;
&lt;li&gt;引入bootstrap-select.js和css&lt;/li&gt;
&lt;li&gt;好了现在开始&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-第一种静态生成&quot;&gt;&lt;a href=&quot;#1-第一种静态生成&quot; class=&quot;headerlink&quot; title=&quot;1.第一种静态生成&quot;&gt;&lt;/a&gt;1.第一种静态生成&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select class=&amp;quot;selectpicker&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;65&amp;quot;&amp;gt;淹死の鱼&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;66&amp;quot;&amp;gt;宋真真&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;89&amp;quot;&amp;gt;燕子&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;88&amp;quot;&amp;gt;何兴华&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;90&amp;quot;&amp;gt;巧芝-冯&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;91&amp;quot;&amp;gt;曼舞飞扬&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;94&amp;quot;&amp;gt;鲍海地&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;63&amp;quot;&amp;gt;蔡&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;option value=&amp;quot;381&amp;quot;&amp;gt;Tank&amp;lt;/option&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直接就在页面中生成了。&lt;/p&gt;
&lt;h4 id=&quot;2-动态生成&quot;&gt;&lt;a href=&quot;#2-动态生成&quot; class=&quot;headerlink&quot; title=&quot;2.动态生成&quot;&gt;&lt;/a&gt;2.动态生成&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在实际开发过程中我们肯定会遇到字符串拼接生成在bootstrap-select有一个很好的方法那就是 $(‘.selectpicker’).selectpicker(‘refresh’);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var str1=&amp;quot;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for(var i=0;i&amp;lt;data.length;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	str1+=&amp;apos;&amp;lt;option value=&amp;quot;&amp;apos;+data.val+&amp;apos;&amp;quot;&amp;gt;&amp;apos;+data.name+&amp;apos;&amp;lt;/option&amp;gt;&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var str=&amp;apos;&amp;lt;select class=&amp;quot;selectpicker  pull-left&amp;quot; multiple data-noneSelectedText=&amp;quot;点击添加&amp;quot; data-title=&amp;quot;点击添加&amp;quot;&amp;gt;&amp;apos;+str1+&amp;apos;&amp;lt;/select&amp;gt;&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; $(&amp;quot;.selectList&amp;quot;).html(str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&amp;apos;.selectpicker&amp;apos;).selectpicker(&amp;apos;refresh&amp;apos;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就直接好了，什么时候需要动态添加就直接refresh就好了&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>程序员买盖饭</title>
    <link href="http://yoursite.com/2017/05/22/test/"/>
    <id>http://yoursite.com/2017/05/22/test/</id>
    <published>2017-05-21T17:09:30.000Z</published>
    <updated>2017-05-22T16:17:25.977Z</updated>
    
    <content type="html"><![CDATA[<p>程序猿,你也配吃10元的盒饭?<br>又是一个阳光灿烂的中午，看了一上午的报纸，茶水也顺带喝了不少，肚子早已经咕咕作响了，今天中午吃点什么了，貌似楼下的新开张的盒饭还不错，于是我来到楼下准备买上一盒。<br>菜色还不错，价格有6元，8元，10元，12元，20元的，像哥这样的精英管理人才，怎么着也的吃最高级的才配合身份，就在我准备购买时，一个响亮的声音响起。<br>“老板，给我一份10元的盒饭”。<br>顺势撇了一眼，一个小伙子，眉开眼笑的靠近盒饭铺，今天是1号，看样子是发工资了。就当他走近时，看到了我，刚才的欢愉的表情瞬时黯淡下去，他知道我认出了他，靠，满头白里带一点黑的头发，永远没睡醒的眼神，以及那凌乱的胡渣子，都出卖了他的身份。我继续狠狠的盯着他，他越发的羞愧了，我犀利的眼神正在和他做着底层通信，我默默的向他传达一个信息，<br>“你，也配吃10元的盒饭?”。<br>他哀怜的眼神似乎在祈求我不要拆穿他的身份，可惜，哥这么有正义感的人，怎么能在这个时候放弃原则!<br>“你不是隔壁公司的程序员么?”<br>就这一瞬间，他整个人似乎崩溃下去，刚才欢愉的表情彻底变为哭丧，周围的小摊贩以及路人甲乙丙丁，都纷纷投来了鄙视的眼光，他瘟鸡一样的双手抓着头发，痛苦的蹲了下去。<br>就在这时，人群中终于有人忍不住了，大声呵骂到，</p>
<a id="more"></a>
<p>“呸，程序员也敢吃10元的盒饭，真不要脸”<br>一位老大娘好心的提醒到，<br>“小伙子啊，你一个程序员，挣点钱不容易啊，怎么吃10元的盒饭啊”<br>一名打扮妖艳入时的姑娘说到，<br>“人家当小姐的都才吃10元，你也敢要10元的?”<br>我义正言辞的给他说到，<br>“我说一句话顶你写一万行代码，也才吃20元的盒饭，你竟敢吃10元的”<br>老板也发话了，<br>“是程序员啊，太不好意思了，你吃6元的吧，不然人家知道我卖了你10元的，我这生意就做不了啊”<br>他终于发出颤抖的声音说到<br>“对不起，我刚才说错了，给我一份6元的”。<br>这时人群中爆发出激烈的掌声，我知道，这是我又一次坚持原则，换来的荣誉的赞赏!  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;程序猿,你也配吃10元的盒饭?&lt;br&gt;又是一个阳光灿烂的中午，看了一上午的报纸，茶水也顺带喝了不少，肚子早已经咕咕作响了，今天中午吃点什么了，貌似楼下的新开张的盒饭还不错，于是我来到楼下准备买上一盒。&lt;br&gt;菜色还不错，价格有6元，8元，10元，12元，20元的，像哥这样的精英管理人才，怎么着也的吃最高级的才配合身份，就在我准备购买时，一个响亮的声音响起。&lt;br&gt;“老板，给我一份10元的盒饭”。&lt;br&gt;顺势撇了一眼，一个小伙子，眉开眼笑的靠近盒饭铺，今天是1号，看样子是发工资了。就当他走近时，看到了我，刚才的欢愉的表情瞬时黯淡下去，他知道我认出了他，靠，满头白里带一点黑的头发，永远没睡醒的眼神，以及那凌乱的胡渣子，都出卖了他的身份。我继续狠狠的盯着他，他越发的羞愧了，我犀利的眼神正在和他做着底层通信，我默默的向他传达一个信息，&lt;br&gt;“你，也配吃10元的盒饭?”。&lt;br&gt;他哀怜的眼神似乎在祈求我不要拆穿他的身份，可惜，哥这么有正义感的人，怎么能在这个时候放弃原则!&lt;br&gt;“你不是隔壁公司的程序员么?”&lt;br&gt;就这一瞬间，他整个人似乎崩溃下去，刚才欢愉的表情彻底变为哭丧，周围的小摊贩以及路人甲乙丙丁，都纷纷投来了鄙视的眼光，他瘟鸡一样的双手抓着头发，痛苦的蹲了下去。&lt;br&gt;就在这时，人群中终于有人忍不住了，大声呵骂到，&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/05/19/hello-world/"/>
    <id>http://yoursite.com/2017/05/19/hello-world/</id>
    <published>2017-05-18T16:18:14.435Z</published>
    <updated>2017-05-22T16:17:01.736Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
